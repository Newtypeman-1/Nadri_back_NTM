<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.iei.place.model.dao.PlaceDao">

	<select id="totalCount" resultType="int">
		  SELECT COUNT(*)
		  FROM place_info
		  <where>
		    <if test="selectedMenu != 0">
		      <choose>
		        <when test="selectedMenu == 12">
		          place_type_id = 12
		        </when>
		        <when test="selectedMenu == 14">
		          place_type_id = 14
		        </when>
		        <when test="selectedMenu == 32">
		          place_type_id = 32
		        </when>
		        <when test="selectedMenu == 39">
		          place_type_id = 39
		        </when>
		      </choose>
		    </if>
		
		    <if test="id != null and id.length > 0">
		      AND place_id IN
		      <foreach item="typeId" collection="id" open="(" separator="," close=")">
		        #{typeId}
		      </foreach>
		    </if>
		  </where>
	</select>

	<!-- 기본 전체조회(타입아이디 필터) -->
	<select id="selectALLPlaceList" resultType="place">
	  SELECT *
	  FROM (
	    SELECT ROWNUM AS rnum, c.*
	    FROM (
	      SELECT
	      	p.place_type_id,
	        p.place_id,
	        p.place_thumb,
	        p.area_code,
	        a.area_name,
	        p.sigungu_code,
	        s.sigungu_name,
	        p.place_title,
	        p.place_cat3,
	        cat.cat3_name,
	        NVL((SELECT ROUND(AVG(star_rate), 1) FROM review WHERE place_id = p.place_id), 0) AS place_rating,
	        NVL((SELECT COUNT(*) FROM review WHERE place_id = p.place_id), 0) AS place_review,
	        (SELECT COUNT(*) FROM bookmark b WHERE b.place_id = p.place_id AND b.member_nickname = #{memberNickname}) AS bookmarked
	      FROM place_info p
	      LEFT JOIN area_code a ON p.area_code = a.area_code
	      LEFT JOIN sigungu_code s ON p.sigungu_code = s.sigungu_code AND p.area_code = s.area_code
	      LEFT JOIN place_cat3 cat ON p.place_cat3 = cat.cat3
	
	      <where>
	        <if test="id != null and id.length > 0">
	          AND p.place_id IN
	          <foreach item="typeId" collection="id" open="(" separator="," close=")">
	            #{typeId}
	          </foreach>
	        </if>
	      </where>
	
	      <choose>
	        <when test="order == 1">
	          ORDER BY place_review DESC
	        </when>
	        <when test="order == 2">
	          ORDER BY place_rating DESC
	        </when>
	        <when test="order == 3">
	          ORDER BY bookmarked DESC
	        </when>
	      </choose>
	    ) c
	  )
	  WHERE rnum BETWEEN #{pi.start} AND #{pi.end}
	</select>


	<!-- place 타입 테이블 조회 -->
	<select id="selectPlaceType" resultType="category">
		select place_type_id as
		id, place_type_name as name
		from place_type
	</select>


	<!-- place 상세페이지 조회 -->
	<select id="selectPlaceWithBookmarked" resultType="place">
		select
			c2.cat2_name,
			c3.cat3_name,
			p.place_title,
			a.area_name,
			s.sigungu_name,
			p.place_overview,
			p.place_addr,
			p.place_tel,
			place_thumb,
			place_type_id,
			place_id,
			nvl((select round(avg(star_rate),1) from review where place_id=p.place_id),0) as place_rating,
			nvl((select count(*) from review where place_id=p.place_id),0) as place_review,
			(select count(*) from bookmark b where b.place_id = p.place_id and b.member_nickname = #{memberNickname}) as bookmarked
		FROM place_info p
		left join place_cat2 c2 on p.place_cat2 = c2.cat2
		left join place_cat3 c3 on p.place_cat3 = c3.cat3
		left join area_code a on p.area_code = a.area_code
		left join sigungu_code s ON p.sigungu_code = s.sigungu_code and p.area_code = s.area_code
		where p.place_id = #{placeId}
	</select>

	<!-- 즐겨찾기 토글 기능 -->
	<select id="checkBookmark" resultType="int">
		select count(*) from bookmark
		where member_nickname = #{memberNickname}
		and place_id = #{placeId}
	</select>
	<insert id="insertBookmark">
		insert into bookmark (bookmark_no, member_nickname, place_id) values (bookmark_seq.nextval, #{memberNickname}, #{placeId})
	</insert>
	<delete id="deleteBookmark">
		delete from bookmark where member_nickname = #{memberNickname} and place_id = #{placeId}
	</delete>
	
	<!-- 메뉴/필터에 해당하는 플레이스 개수 조회 -->
	 <select id="getFilteredPlaceCount" resultType="int">
        SELECT COUNT(*)
        FROM place_info
        WHERE place_type_id = #{placeTypeId}

        <if test="filterCodes != null and filterCodes.size() > 0">
            AND (
                place_cat2 IN
                <foreach item="code" collection="filterCodes" open="(" separator="," close=")">
                    #{code}
                </foreach>
                OR
                place_cat3 IN
                <foreach item="code" collection="filterCodes" open="(" separator="," close=")">
                    #{code}
                </foreach>
            )
        </if>
    </select>
	
	<select id="selectPlaceListByFilterPaged" resultType="place">
        SELECT *
        FROM (
            SELECT ROWNUM AS rnum, data.*
            FROM (
                SELECT
   		            p.place_type_id,
                    p.place_id,
                    p.place_thumb,
                    p.area_code,
                    a.area_name,
                    p.sigungu_code,
                    s.sigungu_name,
                    p.place_title,
                    p.place_cat3,
                    cat.cat3_name,
                    NVL((SELECT ROUND(AVG(star_rate), 1) FROM review WHERE place_id = p.place_id), 0) AS place_rating,
                    NVL((SELECT COUNT(*) FROM review WHERE place_id = p.place_id), 0) AS place_review,
                    (SELECT COUNT(*) FROM bookmark b WHERE b.place_id = p.place_id AND b.member_nickname = #{request.memberNickname}) AS bookmarked
                FROM place_info p
                LEFT JOIN area_code a ON p.area_code = a.area_code
                LEFT JOIN sigungu_code s ON p.sigungu_code = s.sigungu_code AND p.area_code = s.area_code
                LEFT JOIN place_cat3 cat ON p.place_cat3 = cat.cat3
                WHERE p.place_type_id = #{request.placeTypeId}

                <if test="request.filterCodes != null and request.filterCodes.size() > 0">
                    AND (
                        p.place_cat2 IN
                        <foreach item="code" collection="request.filterCodes" open="(" separator="," close=")">
                            #{code}
                        </foreach>
                        OR
                        p.place_cat3 IN
                        <foreach item="code" collection="request.filterCodes" open="(" separator="," close=")">
                            #{code}
                        </foreach>
                    )
                </if>

                <choose>
                    <when test="request.order == 1">
                        ORDER BY place_review DESC
                    </when>
                    <when test="request.order == 2">
                        ORDER BY place_rating DESC
                    </when>
                    <when test="request.order == 3">
                        ORDER BY bookmarked DESC
                    </when>
                </choose>
            ) data
        )
        WHERE rnum BETWEEN #{pi.start} AND #{pi.end}
    </select>
	
	<!-- 조회수 저장 -->
	<update id="updatePlaceViewCount" parameterType="int">
	  UPDATE place_info
	  SET view_count = view_count + 1
	  WHERE place_id = #{placeId}
	</update>

	<!-- 조회수 조회 -->
	<select id="selectViewCount" parameterType="int" resultType="int">
	  SELECT view_count
	  FROM place_info
	  WHERE place_id = #{placeId}
	</select>

	<!-- 초기 데이터: place데이터 -->
	<insert id="insertPlaceInfoList" parameterType="java.util.List">
		INSERT INTO place_info (
		place_id, place_type_id, place_title,
		place_addr, place_tel,
		area_code, sigungu_code,
		place_cat1, place_cat2,
		place_cat3,
		map_lat, map_lng, place_thumb
		)
		<foreach collection="list" item="place" separator="union all">
			SELECT
			#{place.placeId}, #{place.placeTypeId}, #{place.placeTitle},
			#{place.placeAddr},
			#{place.placeTel},
			#{place.areaCode},
			#{place.sigunguCode},
			#{place.placeCat1}, #{place.placeCat2},
			#{place.placeCat3},
			#{place.mapLat}, #{place.mapLng},
			#{place.placeThumb}
			FROM DUAL
		</foreach>
	</insert>

	<!-- 초기 데이터: 오버뷰 인서트쿼리 -->
	<select id="selectPlaces" resultType="place">
		SELECT * FROM place_info
	</select>
	<update id="updateOverview"
		parameterType="kr.co.iei.place.model.dto.PlaceInfoDTO">
		UPDATE place_info
		SET place_overview = #{placeOverview}
		WHERE place_id = #{placeId}
	</update>


	<!-- spot detail 추가 쿼리! 추후 수정 필요 <insert id="insertSpotInfo" parameterType="kr.co.iei.place.model.dto.SpotDTO"> 
		INSERT INTO spot (place_id, heritage1, heritage2, heritage3, use_season) 
		VALUES (#{placeId}, #{heritage1}, #{heritage2}, #{heritage3}, #{useSeason}) 
		</insert> -->
	<select id="selectAllPlaceCategories" resultType="category">
		SELECT 1 AS
		cat_index, cat1 AS id, cat1_name AS name FROM place_cat1
		UNION ALL
		SELECT 2 AS cat_index, cat2 AS id, cat2_name AS name FROM place_cat2
		UNION ALL
		SELECT 3 AS cat_index, cat3 AS id, cat3_name AS name FROM
		place_cat3
	</select>
	<select id="selectArea" resultType="category">
		select area_code as id,
		area_name as name from area_code
	</select>
	
	<select id="selectImagesByPlaceId">
		SELECT * FROM place_img WHERE place_id = #{placeId}
		order by place_image_no desc
	</select>
	
	<delete id="deleteByImageNo">
		DELETE FROM place_img WHERE place_image_no = #{placeImageNo}
	</delete>
	
	<update id="updatePlace" parameterType="Place">
	  UPDATE place_info
	  SET
	    place_title = #{placeTitle},
	    place_tel = #{placeTel},
	    use_time = #{useTime},
	    rest_date = #{restDate},
	    parking = #{parking},
	    place_overview = #{placeOverview}
	  WHERE place_id = #{placeId}
	</update>
	
	<update id="updatePlaceOverview">
		UPDATE place_info
	    SET place_overview = #{overview}
	    WHERE place_id = #{placeId}
	</update>
	
	<select id="selectPlaceById" resultType="place">
		select * from place_info where place_id= #{placeId}
	</select>
	
	<insert id="insertRequest" parameterType="updateRequest">
	  INSERT INTO place_update_request (
	    request_no, place_id, place_title, place_addr, place_tel, request_date
	  ) VALUES (
	    place_request_seq.NEXTVAL, #{placeId}, #{placeTitle}, #{placeAddr}, #{placeTel}, TO_CHAR(SYSDATE,'yyyy-mm-dd hh24:mi:ss')
	  )
	</insert>
	
	<!-- 사용자 요청 저장 -->
	<update id="markRequestChecked" parameterType="int">
	  UPDATE place_update_request SET is_checked = 'Y' WHERE request_no = #{requestNo}
	</update>
	
	<!-- SELECT: 관리자용 요청 목록 -->
	<select id="selectRequests" resultType="updateRequest">
	  SELECT * FROM place_update_request
	  <where>
	    <if test="status != null">
	      <choose>
	        <when test="status == 0">
	          is_checked = 'N'
	        </when>
	        <when test="status == 1">
	          is_checked = 'Y'
	        </when>
	      </choose>
	    </if>
	  </where>
	  ORDER BY request_no DESC
	</select>
	
	<!-- 리퀘스트에 따른 플레이스 수정 -->
	<update id="updatePlaceInfoByRequest" parameterType="updateRequest">
	  UPDATE place_info
	  SET place_title = #{placeTitle},
	      place_addr = #{placeAddr},
	      place_tel = #{placeTel}
	  WHERE place_id = #{placeId}
	</update>

	
</mapper>
